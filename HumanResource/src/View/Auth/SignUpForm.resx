<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAcAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDE8D+ErCLSAAHEIYgKDgse7Me5P9K6e38I2dzMsVvBcSyt0RGJ
        J/CqPhi9jg0hEYMW3Mf1r0L4a+I9Ps9UuY7+RbUzxbIrhjwhz0J7Z468cV9c6fsqHPCF7I/NI1ZYjGez
        qVOVN7nKX/gJdPjV72xu4UY4DOSBn0z61Fe+C7exkWO8tbmB2G4LISpI9a7Px1beILCyimutQXUtKaQN
        HMpzhiDjI7d+hIrr9ctY7/4l6VBcYaFLMzFCMhiGbH64P4Vh7eMYxk0mmpPTyOxYKpOU4RcotOKV7fav
        rp006Hktt8PWuYRLBpt88ZGQwDYP09ait/AqXM0sMFjeSSxcSIucr9R2ru31bxF4j8VajZ6ZqkOnpayM
        kcTvsBAbbjgEk1d8F/b9J1zxUuoTJc3tvAJnZSSrMQX9B6+lOVRwg3JRvZO2vVrf7wp4eNSpGMZT5W2n
        J2tom9OvTqeaWvgu3urhoLa0uZZlBJRCSRjrxUMfhSwklWNIpmkZtoUOck+le1aPaRv4wttb09idP1Oz
        Z8f3ZMqSPqf5hq8m0S9lPiawUvwbyMdP9sVpQnGtzWitEn89br5WOfF0KmG5E5t80mvlpZr1TKdz4Ntr
        W48i5triKbj5HJB56cVK3gNVvFtTYXguWXcIudxHrj0rrviPdvF4/VFIxiHgj6V2N3OR8WbOHAwbEn3/
        AI6ylW5YRnyrWLf3WOinhHKrOn7R+7NR+9vX8DyK88A/YovMutPvYo+7sCAPxrPbwvpxUgCVT2IfpXt6
        SXukR67c+J7mMaZJvEETy7y4JOAB24wMV5Auo27dSy/UVrhZKuneK06rb+kc2Y05YRx5ZvW+j3Vn+T6H
        jfiPwTp0us3LStNHLuw3ksFDn+9gg8nvRXU6+6vrF0yHKl+D+FFcU8PS5n7p6lLHYj2cbTexPps+y1C5
        6E11PhO88OiS5TxMt4UZVEL238B5znn6djXj/gTUrq/0QvcyF5IpTEH7sAARn1PPWuj81/7xrshilUpJ
        ar0OCpgnRxDbs7N76o9a8T+MNHHhaPw94biuja+Z5kk1yeTznAH1+nTpU/iv4hW8/jDTda0MSkWsPluk
        67d+S2RwTwQa8e81/wC8aPNf+8aziqK3Te/zvvc2lUxEr2aXw7Lbl2t957h/wlnge71mHXJ7bUrXUUcT
        NHGAUdx368/pmqlv4+0v+3vFF9Il0kWpW4igXYCwITb83PH61415r/3jR5r/AN41KhS2d3pbfpe5br17
        prlWt9Fu7NXf3nsnw1+IdpoFhNY6wJpLdX8y3aNQxQn7w5I47/ifWuATUGhvFuIWw6SeYh9CDkVzXmv/
        AHjR5r/3jW0KlOE5TitZbnLVp1atOFKctIbHuN14x8G61e2esaxbX8Wp26ruhiAKSFTkd+Rn6e9Zdh8Q
        LaX4iHXtRjljtBG0SRxgMyrtwPT6n615F5r/AN40ea/941lGFJJrXa2+y8jplWxEpKWiaalot2urOs1v
        U0vdYvrmJm8qaeSRN3UKWJH86o/afesHzX/vGjzXP8RrrjilFWSPOlgXKTk3uPvG33UjDnJoryXxJrmo
        vrl4iXc0McUrRIkTlBhSR2PJ96K8Wpj4870Pp6OTzdOL5lsj/9k=
</value>
  </data>
</root>